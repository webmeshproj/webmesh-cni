---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: remotenetworks.cni.webmesh.io
spec:
  group: cni.webmesh.io
  names:
    kind: RemoteNetwork
    listKind: RemoteNetworkList
    plural: remotenetworks
    singular: remotenetwork
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Whether the remote network has been peered with
      jsonPath: .status.peered
      name: Peered
      type: boolean
    name: v1
    schema:
      openAPIV3Schema:
        description: RemoteNetwork is the Schema for the remotenetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RemoteNetworkSpec defines the configuration for peering with
              another webmesh network.
            properties:
              authMethod:
                default: native
                description: AuthMethod is the authentication method to use for peering
                  with the remote network.
                enum:
                - none
                - native
                - kubernetes
                type: string
              credentials:
                description: Credentials are a reference to a secret containing credentials
                  for the remote network. This must contain at a minimum a pre-shared-key
                  for seeding address space allocation in the bridge network. It may
                  also contain a kubeconfig for kubernetes authentication or TLS credentials
                  for mTLS authentication. If native authentication is set and no
                  kubeconfig or TLS credentials are present, ID authentication will
                  be used.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              peers:
                description: Peers are one or more peers in the remote network. These
                  are optional when using kubernetes authentication. Endpoints must
                  be supplied for one or more peers in the list if not using peer-discovery.
                items:
                  description: Peer is a CNI node in the remote network.
                  properties:
                    endpoints:
                      description: Endpoints are the endpoints of the peer. When not
                        performing authentication and not using peer-discovery, these
                        are remote wireguard endpoints. When performing authentication
                        without peer-discovery, these are remote gRPC endpoints.
                      items:
                        type: string
                      type: array
                    id:
                      description: ID is the ID of the peer. If provided, the native
                        authentication will attempt ID based authentication. If not
                        provided, an ID will be extracted from the public key and
                        used for authentication.
                      type: string
                    publicKey:
                      description: PublicKey is the public key of the peer. This must
                        be provided if no ID is provided.
                      type: string
                    rendezvous:
                      description: Rendezvous is a rendezvous point for the peer.
                        This is used for peer discovery.
                      type: string
                  type: object
                type: array
            required:
            - authMethod
            - credentials
            type: object
          status:
            description: RemoteNetworkStatus will contain the status of the peering
              with the remote network.
            properties:
              error:
                description: Error is the last error encountered when peering with
                  the remote network.
                type: string
              peered:
                description: Peered is true when the remote network has been successfully
                  peered with.
                type: boolean
              peers:
                description: Peers are the peers in the remote network.
                items:
                  description: Peer is a CNI node in the remote network.
                  properties:
                    endpoints:
                      description: Endpoints are the endpoints of the peer. When not
                        performing authentication and not using peer-discovery, these
                        are remote wireguard endpoints. When performing authentication
                        without peer-discovery, these are remote gRPC endpoints.
                      items:
                        type: string
                      type: array
                    id:
                      description: ID is the ID of the peer. If provided, the native
                        authentication will attempt ID based authentication. If not
                        provided, an ID will be extracted from the public key and
                        used for authentication.
                      type: string
                    publicKey:
                      description: PublicKey is the public key of the peer. This must
                        be provided if no ID is provided.
                      type: string
                    rendezvous:
                      description: Rendezvous is a rendezvous point for the peer.
                        This is used for peer discovery.
                      type: string
                  type: object
                type: array
            required:
            - peered
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
